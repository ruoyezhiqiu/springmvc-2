<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.wushengde.springmvc.crud"></context:component-scan>
	
	<!-- 配置视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 
		springMVC 处理静态资源:使用mvc:default-servlet-handler标签
	 	实际开发需要与mvc:annotation-driven标签连用 
	 	
	 	default-servlet-handler标签 作用：
			将在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler，
			它会对进入 DispatcherServlet 的请求进行筛查，
			如果发现是没有经过映射的请求，就将该请求交由 WEB 应用服务器默认的 Servlet 处理，
			如果不是静态资源的请求，才由DispatcherServlet 继续处理
			
			一般 WEB 应用服务器默认的 Servlet 的名称都是 default。若所使用的 
			WEB 服务器的默认 Servlet 名称不是 default，则需要通过 default-
			servlet-name 属性显式指定
	-->
	<mvc:default-servlet-handler/><!-- 解决：处理静态资源 -->
	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
	
	
	<!-- 此处配置自定义类型转换器，需要将以下类型转换器的id指定给：annotation-driven标签的 conversion-service属性-->
	<!-- 配置ConversionService:利用 FormattingConversionServiceFactoryBean,即可实现自定义类型转换，也可使用格式化注解：如：@DateTimeFormat、@NumberFormat -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<ref bean="employeeConverter"/>
			</set>
		</property>
	</bean>
	
	<!-- 配置国际化资源文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n"></property>
	</bean>
	
	<!-- 配置直接跳转：不需要经过handler方法直接页面跳转 注：需与mvc:annotation-driven标签连用 -->
	<mvc:view-controller path="/i18n" view-name="i18n"/>
	<mvc:view-controller path="/i18n2" view-name="i18n2"/>
	
	<!-- 配置自定义拦截器：FirstInterceptor -->
	<mvc:interceptors>
		<bean class="com.wushengde.springmvc.interceptors.FirstInterceptor"></bean>
		
		<!-- 配置拦截器(或者是不作用)作用的路径 -->
		<mvc:interceptor>
			<mvc:mapping path="/emps"/>
			<bean class="com.wushengde.springmvc.interceptors.SecondInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
